[{"D:\\React2\\React Router\\Practice\\src\\index.js":"1","D:\\React2\\React Router\\Practice\\src\\App.js":"2","D:\\React2\\React Router\\Practice\\src\\components\\layout\\MainNav.js":"3","D:\\React2\\React Router\\Practice\\src\\pages\\AllQuotes.js":"4","D:\\React2\\React Router\\Practice\\src\\pages\\NewQuote.js":"5","D:\\React2\\React Router\\Practice\\src\\components\\quotes\\QuoteList.js":"6","D:\\React2\\React Router\\Practice\\src\\components\\quotes\\QuoteItem.js":"7","D:\\React2\\React Router\\Practice\\src\\components\\quotes\\NoQuotesFound.js":"8","D:\\React2\\React Router\\Practice\\src\\components\\quotes\\QuoteForm.js":"9","D:\\React2\\React Router\\Practice\\src\\components\\UI\\Card.js":"10","D:\\React2\\React Router\\Practice\\src\\components\\ui\\Card.js":"11","D:\\React2\\React Router\\Practice\\src\\components\\ui\\LoadingSpinner.js":"12","D:\\React2\\React Router\\Practice\\src\\pages\\QuoteDetails.js":"13","D:\\React2\\React Router\\Practice\\src\\components\\comments\\Comments.js":"14","D:\\React2\\React Router\\Practice\\src\\components\\comments\\NewCommentForm.js":"15","D:\\React2\\React Router\\Practice\\src\\components\\quotes\\HighlightedQuote.js":"16","D:\\React2\\React Router\\Practice\\src\\pages\\NotFound.js":"17","D:\\React2\\React Router\\Practice\\src\\hooks\\use-http.js":"18","D:\\React2\\React Router\\Practice\\src\\components\\comments\\CommentsList.js":"19","D:\\React2\\React Router\\Practice\\src\\components\\comments\\CommentItem.js":"20","D:\\React2\\React Router\\Practice v6\\src\\index.js":"21","D:\\React2\\React Router\\Practice v6\\src\\App.js":"22","D:\\React2\\React Router\\Practice v6\\src\\pages\\NotFound.js":"23","D:\\React2\\React Router\\Practice v6\\src\\pages\\NewQuote.js":"24","D:\\React2\\React Router\\Practice v6\\src\\pages\\QuoteDetails.js":"25","D:\\React2\\React Router\\Practice v6\\src\\pages\\AllQuotes.js":"26","D:\\React2\\React Router\\Practice v6\\src\\components\\layout\\MainNav.js":"27","D:\\React2\\React Router\\Practice v6\\src\\components\\quotes\\QuoteForm.js":"28","D:\\React2\\React Router\\Practice v6\\src\\components\\quotes\\HighlightedQuote.js":"29","D:\\React2\\React Router\\Practice v6\\src\\components\\quotes\\NoQuotesFound.js":"30","D:\\React2\\React Router\\Practice v6\\src\\hooks\\use-http.js":"31","D:\\React2\\React Router\\Practice v6\\src\\components\\quotes\\QuoteList.js":"32","D:\\React2\\React Router\\Practice v6\\src\\components\\ui\\LoadingSpinner.js":"33","D:\\React2\\React Router\\Practice v6\\src\\components\\comments\\Comments.js":"34","D:\\React2\\React Router\\Practice v6\\src\\components\\quotes\\QuoteItem.js":"35","D:\\React2\\React Router\\Practice v6\\src\\components\\ui\\Card.js":"36","D:\\React2\\React Router\\Practice v6\\src\\components\\comments\\CommentsList.js":"37","D:\\React2\\React Router\\Practice v6\\src\\components\\comments\\NewCommentForm.js":"38","D:\\React2\\React Router\\Practice v6\\src\\components\\comments\\CommentItem.js":"39"},{"size":316,"mtime":1657735578796,"results":"40","hashOfConfig":"41"},{"size":946,"mtime":1657646387173,"results":"42","hashOfConfig":"41"},{"size":709,"mtime":1657723012126,"results":"43","hashOfConfig":"41"},{"size":1404,"mtime":1657663107422,"results":"44","hashOfConfig":"41"},{"size":978,"mtime":1657733275371,"results":"45","hashOfConfig":"41"},{"size":1515,"mtime":1657660380956,"results":"46","hashOfConfig":"41"},{"size":458,"mtime":1657579602235,"results":"47","hashOfConfig":"41"},{"size":330,"mtime":1657580980943,"results":"48","hashOfConfig":"41"},{"size":1855,"mtime":1657583327680,"results":"49","hashOfConfig":"41"},{"size":156,"mtime":1616596573000,"results":"50","hashOfConfig":"41"},{"size":156,"mtime":1616596573000,"results":"51","hashOfConfig":"41"},{"size":167,"mtime":1616596573000,"results":"52","hashOfConfig":"41"},{"size":2472,"mtime":1657733139080,"results":"53","hashOfConfig":"41"},{"size":2905,"mtime":1657733057246,"results":"54","hashOfConfig":"41"},{"size":943,"mtime":1657733080333,"results":"55","hashOfConfig":"41"},{"size":270,"mtime":1616596573000,"results":"56","hashOfConfig":"41"},{"size":149,"mtime":1657581768201,"results":"57","hashOfConfig":"41"},{"size":2197,"mtime":1657643565775,"results":"58","hashOfConfig":"41"},{"size":657,"mtime":1657732972629,"results":"59","hashOfConfig":"41"},{"size":200,"mtime":1616596573000,"results":"60","hashOfConfig":"41"},{"size":316,"mtime":1657746313226,"results":"61","hashOfConfig":"62"},{"size":976,"mtime":1657745104612,"results":"63","hashOfConfig":"62"},{"size":149,"mtime":1657581768201,"results":"64","hashOfConfig":"62"},{"size":1014,"mtime":1657738478758,"results":"65","hashOfConfig":"62"},{"size":2595,"mtime":1657745057782,"results":"66","hashOfConfig":"62"},{"size":1404,"mtime":1657663107422,"results":"67","hashOfConfig":"62"},{"size":863,"mtime":1657743303916,"results":"68","hashOfConfig":"62"},{"size":1866,"mtime":1657738086391,"results":"69","hashOfConfig":"62"},{"size":270,"mtime":1616596573000,"results":"70","hashOfConfig":"62"},{"size":330,"mtime":1657580980943,"results":"71","hashOfConfig":"62"},{"size":2197,"mtime":1657643565775,"results":"72","hashOfConfig":"62"},{"size":1506,"mtime":1657741252043,"results":"73","hashOfConfig":"62"},{"size":167,"mtime":1616596573000,"results":"74","hashOfConfig":"62"},{"size":2819,"mtime":1657743434194,"results":"75","hashOfConfig":"62"},{"size":458,"mtime":1657579602235,"results":"76","hashOfConfig":"62"},{"size":156,"mtime":1616596573000,"results":"77","hashOfConfig":"62"},{"size":657,"mtime":1657732972629,"results":"78","hashOfConfig":"62"},{"size":943,"mtime":1657733080333,"results":"79","hashOfConfig":"62"},{"size":200,"mtime":1616596573000,"results":"80","hashOfConfig":"62"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1h7m5nr",{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"86"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"86"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"z34flp",{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"136"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"136"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"136"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"136"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"136"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},"D:\\React2\\React Router\\Practice\\src\\index.js",[],"D:\\React2\\React Router\\Practice\\src\\App.js",["173","174"],"import React, { Component, useState } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport MainNav from \"./components/layout/MainNav\";\nimport AllQuotes from \"./pages/AllQuotes\";\nimport NewQuote from \"./pages/NewQuote\";\nimport QuoteDetails from \"./pages/QuoteDetails\";\nimport NotFound from \"./pages/NotFound\";\nfunction App() {\n  return (\n    <div>\n      <MainNav></MainNav>\n      <main className=\"main\">\n        <Switch>\n          <Route path=\"/\" exact>\n            <Redirect to=\"/all-quotes\" />\n          </Route>\n          <Route path=\"/all-quotes\" exact>\n            <AllQuotes />\n          </Route>\n          <Route path=\"/new-quote\">\n            <NewQuote />\n          </Route>\n          <Route path=\"/all-quotes/:quoteId\">\n            <QuoteDetails />\n          </Route>\n          <Route path=\"*\">\n            <NotFound />\n          </Route>\n        </Switch>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n",["175","176"],"D:\\React2\\React Router\\Practice\\src\\components\\layout\\MainNav.js",[],"D:\\React2\\React Router\\Practice\\src\\pages\\AllQuotes.js",["177"],"import React, { Component, useEffect, useState } from \"react\";\r\n\r\nimport QuoteList from \"../components/quotes/QuoteList\";\r\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport LoadingSpinner from \"../components/ui/LoadingSpinner\";\r\nconst AllQuotes = (props) => {\r\n  /////////\r\n  const { isLoading, error, requestFn: getQuotes } = useHttp();\r\n  const [allQuots, setAllQuots] = useState([]);\r\n  useEffect(() => {\r\n    const transformData = (data) => {\r\n      const loadedArray = [];\r\n      Object.entries(data).map(([key, value]) => {\r\n        return loadedArray.push({\r\n          id: key,\r\n          text: value.text,\r\n          author: value.author,\r\n        });\r\n      });\r\n      setAllQuots(loadedArray);\r\n    };\r\n    getQuotes(\r\n      {\r\n        url: \"https://react-router-fcb08-default-rtdb.firebaseio.com/quotes.json\",\r\n      },\r\n      transformData\r\n    );\r\n  }, [getQuotes]);\r\n  //////////\r\n  // console.log(allQuots);\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n  if (error) {\r\n    return <p className=\"centered focused\">{error}</p>;\r\n  }\r\n  if (!error && !isLoading && allQuots.length === 0) {\r\n    return <NoQuotesFound />;\r\n  }\r\n  return (\r\n    <div>\r\n      <QuoteList quotes={allQuots}></QuoteList>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllQuotes;\r\n","D:\\React2\\React Router\\Practice\\src\\pages\\NewQuote.js",["178"],"import { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport QuoteForm from \"../components/quotes/QuoteForm\";\r\nimport useHttp from \"../hooks/use-http\";\r\n\r\nconst NewQuote = (props) => {\r\n  const history = useHistory();\r\n\r\n  //////////\r\n  const { isLoading, error, requestFn: sendQuote } = useHttp();\r\n  const [isSubmited, setIsSubmited] = useState(false);\r\n  const addQuoteHandler = (newQuote) => {\r\n    const transformData = (data) => {\r\n      setIsSubmited(true);\r\n    };\r\n    sendQuote(\r\n      {\r\n        url: \"https://react-router-fcb08-default-rtdb.firebaseio.com/quotes.json\",\r\n        method: \"POST\",\r\n        body: newQuote,\r\n      },\r\n      transformData\r\n    );\r\n  };\r\n\r\n  if (isSubmited && !error && !isLoading) {\r\n    history.push(\"/all-quotes\");\r\n  }\r\n\r\n  ///////////////\r\n  return (\r\n    <div>\r\n      <QuoteForm isLoading={isLoading} onAddQuote={addQuoteHandler}></QuoteForm>\r\n    </div>\r\n  );\r\n};\r\nexport default NewQuote;\r\n","D:\\React2\\React Router\\Practice\\src\\components\\quotes\\QuoteList.js",[],"D:\\React2\\React Router\\Practice\\src\\components\\quotes\\QuoteItem.js",[],"D:\\React2\\React Router\\Practice\\src\\components\\quotes\\NoQuotesFound.js",[],"D:\\React2\\React Router\\Practice\\src\\components\\quotes\\QuoteForm.js",[],"D:\\React2\\React Router\\Practice\\src\\components\\UI\\Card.js",[],"D:\\React2\\React Router\\Practice\\src\\components\\ui\\Card.js",[],"D:\\React2\\React Router\\Practice\\src\\components\\ui\\LoadingSpinner.js",[],"D:\\React2\\React Router\\Practice\\src\\pages\\QuoteDetails.js",["179","180"],"import { useEffect, useState } from \"react\";\r\nimport {\r\n  Route,\r\n  useParams,\r\n  Link,\r\n  useHistory,\r\n  useLocation,\r\n  useRouteMatch,\r\n} from \"react-router-dom\";\r\nimport Comments from \"../components/comments/Comments\";\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport LoadingSpinner from \"../components/ui/LoadingSpinner\";\r\n\r\nconst QuoteDetails = () => {\r\n  const params = useParams();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const match = useRouteMatch();\r\n  //////////\r\n  const { isLoading, error, requestFn: getQuotes } = useHttp();\r\n  const [allQuots, setAllQuots] = useState([]);\r\n  useEffect(() => {\r\n    const transformData = (data) => {\r\n      const loadedArray = [];\r\n      Object.entries(data).map(([key, value]) => {\r\n        return loadedArray.push({\r\n          id: key,\r\n          text: value.text,\r\n          author: value.author,\r\n        });\r\n      });\r\n      setAllQuots(loadedArray);\r\n    };\r\n    getQuotes(\r\n      {\r\n        url: \"https://react-router-fcb08-default-rtdb.firebaseio.com/quotes.json\",\r\n      },\r\n      transformData\r\n    );\r\n  }, [getQuotes]);\r\n  /////////\r\n  // const quote = allQuots.find((quote) => quote.id === params.quoteId);\r\n  const [quote] = allQuots.filter((quote) => quote.id === params.quoteId);\r\n  const targetQuote = { ...quote };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n  if (error) {\r\n    return <p className=\"centered focused\">{error}</p>;\r\n  }\r\n  if (!error && !isLoading && targetQuote.text === \"\") {\r\n    return <p>No Quote Found</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <HighlightedQuote text={targetQuote.text} author={targetQuote.author} />\r\n      <Route path={`${match.path}`} exact>\r\n        <div className=\"centered\">\r\n          <Link className=\"btn--flat\" to={`${match.url}/comments`}>\r\n            Load Comments\r\n          </Link>\r\n        </div>\r\n      </Route>\r\n      {/* {location.pathname === `/all-quotes/${params.quoteId}` && (\r\n        <div className=\"centered\">\r\n          <Link\r\n            className=\"btn--flat\"\r\n            to={`/all-quotes/${params.quoteId}/comments`}\r\n          >\r\n            Load Comments\r\n          </Link>\r\n        </div>\r\n      )} */}\r\n      <Route path={`${match.path}/comments`}>\r\n        <Comments></Comments>\r\n      </Route>\r\n    </div>\r\n  );\r\n};\r\nexport default QuoteDetails;\r\n","D:\\React2\\React Router\\Practice\\src\\components\\comments\\Comments.js",["181","182"],"import { useCallback, useEffect, useState } from \"react\";\n\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport CommentsList from \"./CommentsList\";\nimport useHttp from \"../../hooks/use-http\";\nimport {\n  useHistory,\n  useLocation,\n  useParams,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport LoadingSpinner from \"../ui/LoadingSpinner\";\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  //////////\n  const params = useParams();\n  const history = useHistory();\n  const match = useRouteMatch();\n  const location = useLocation();\n  const { isLoading, error, requestFn: sendComment } = useHttp();\n  ////////////\n  const [supmitComment, setSubmitComment] = useState(false);\n  const addCommentHandler = (commentText) => {\n    const transformData = (data) => {\n      setSubmitComment(true);\n    };\n    sendComment(\n      {\n        url: \"https://react-router-fcb08-default-rtdb.firebaseio.com/comments.json\",\n        method: \"POST\",\n        body: { quote: params.quoteId, text: commentText },\n      },\n      transformData\n    );\n  };\n\n  useEffect(() => {\n    if (!isLoading && !error && supmitComment) {\n      history.replace(`/all-quotes/${match.params.quoteId}`);\n    }\n  }, [error, isLoading, supmitComment, history, match.params.quoteId]);\n\n  ///////////////\n  /////////\n  const { isLoading: isload, error: err, requestFn: getComments } = useHttp();\n  const [allComments, setAllComments] = useState([]);\n  useEffect(() => {\n    const transformData = (data) => {\n      const loadedArray = [];\n      Object.entries(data).map(([key, value]) => {\n        return loadedArray.push({\n          id: key,\n          text: value.text,\n          quote: value.quote,\n        });\n      });\n      setAllComments(loadedArray);\n    };\n    getComments(\n      {\n        url: \"https://react-router-fcb08-default-rtdb.firebaseio.com/comments.json\",\n      },\n      transformData\n    );\n  }, [getComments]);\n\n  let comments;\n  if (isload) {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />{\" \"}\n      </div>\n    );\n  }\n  if (!isload && !err && allComments.length > 0) {\n    comments = <CommentsList comments={allComments} />;\n  }\n  if (!isload && !err && allComments.length === 0) {\n    comments = <p className=\"centered\">no comments were added yet</p>;\n  }\n  //////////\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          isLoading={isLoading}\n          onAddComment={addCommentHandler}\n          error={error}\n        />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","D:\\React2\\React Router\\Practice\\src\\components\\comments\\NewCommentForm.js",["183"],"import { useEffect, useRef } from \"react\";\n\nimport classes from \"./NewCommentForm.module.css\";\nimport LoadingSpinner from \"../ui/LoadingSpinner\";\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    // send comment to server\n    props.onAddComment(commentTextRef.current.value);\n  };\n  if (props.isLoading) {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","D:\\React2\\React Router\\Practice\\src\\components\\quotes\\HighlightedQuote.js",[],"D:\\React2\\React Router\\Practice\\src\\pages\\NotFound.js",[],"D:\\React2\\React Router\\Practice\\src\\hooks\\use-http.js",["184","185"],"import React, { Component, useCallback, useState } from \"react\";\n\nconst useHttp = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const requestFn = useCallback(async (configReq, applyData) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(configReq.url, {\n        method: configReq.method ? configReq.method : \"GET\",\n        headers: configReq.headers ? configReq.headers : {},\n        body: configReq.body ? JSON.stringify(configReq.body) : null,\n      });\n      if (!response.ok) {\n        throw new Error(\"Request Field\");\n      }\n      const data = await response.json();\n      applyData(data);\n    } catch (err) {\n      // setError(err.message || \"Something Went Wrong\");\n      setError(\"Something Went Wrong\");\n    }\n\n    setIsLoading(false);\n  }, []);\n  return {\n    isLoading: isLoading,\n    error: error,\n    requestFn: requestFn,\n  };\n};\n\nexport default useHttp;\n\n/*\n\nimport { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n*/\n","D:\\React2\\React Router\\Practice\\src\\components\\comments\\CommentsList.js",[],"D:\\React2\\React Router\\Practice\\src\\components\\comments\\CommentItem.js",[],"D:\\React2\\React Router\\Practice v6\\src\\index.js",[],"D:\\React2\\React Router\\Practice v6\\src\\App.js",["186","187"],"import React, { Component, useState } from \"react\";\nimport { Route, Routes, Navigate } from \"react-router-dom\";\nimport MainNav from \"./components/layout/MainNav\";\nimport AllQuotes from \"./pages/AllQuotes\";\nimport NewQuote from \"./pages/NewQuote\";\nimport QuoteDetails from \"./pages/QuoteDetails\";\nimport NotFound from \"./pages/NotFound\";\nimport Comments from \"./components/comments/Comments\";\nfunction App() {\n  return (\n    <div>\n      <MainNav></MainNav>\n      <main className=\"main\">\n        <Routes>\n          <Route path=\"/\" element={<Navigate to=\"/all-quotes\" />} />\n\n          <Route path=\"/all-quotes\" element={<AllQuotes />} />\n\n          <Route path=\"/new-quote\" element={<NewQuote />} />\n\n          <Route path=\"/all-quotes/:quoteId\" element={<QuoteDetails />}>\n            <Route path=\"comments\" element={<Comments />} />\n          </Route>\n\n          <Route path=\"*\" element={<NotFound />} />\n        </Routes>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\React2\\React Router\\Practice v6\\src\\pages\\NotFound.js",[],["188","189"],"D:\\React2\\React Router\\Practice v6\\src\\pages\\NewQuote.js",["190"],"import { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport QuoteForm from \"../components/quotes/QuoteForm\";\r\nimport useHttp from \"../hooks/use-http\";\r\n\r\nconst NewQuote = (props) => {\r\n  const navigate = useNavigate();\r\n\r\n  //////////\r\n  const { isLoading, error, requestFn: sendQuote } = useHttp();\r\n  const [isSubmited, setIsSubmited] = useState(false);\r\n  const addQuoteHandler = (newQuote) => {\r\n    const transformData = (data) => {\r\n      setIsSubmited(true);\r\n    };\r\n    sendQuote(\r\n      {\r\n        url: \"https://react-router-fcb08-default-rtdb.firebaseio.com/quotes.json\",\r\n        method: \"POST\",\r\n        body: newQuote,\r\n      },\r\n      transformData\r\n    );\r\n  };\r\n\r\n  if (isSubmited && !error && !isLoading) {\r\n    // history.push(\"/all-quotes\");\r\n    navigate(\"/all-quotes\");\r\n  }\r\n\r\n  ///////////////\r\n  return (\r\n    <div>\r\n      <QuoteForm isLoading={isLoading} onAddQuote={addQuoteHandler}></QuoteForm>\r\n    </div>\r\n  );\r\n};\r\nexport default NewQuote;\r\n","D:\\React2\\React Router\\Practice v6\\src\\pages\\QuoteDetails.js",["191","192","193","194"],"import { useEffect, useState } from \"react\";\r\nimport {\r\n  Route,\r\n  useParams,\r\n  Link,\r\n  useNavigate,\r\n  useLocation,\r\n  Routes,\r\n  Outlet,\r\n} from \"react-router-dom\";\r\nimport Comments from \"../components/comments/Comments\";\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport LoadingSpinner from \"../components/ui/LoadingSpinner\";\r\n\r\nconst QuoteDetails = () => {\r\n  const params = useParams();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  console.log(location);\r\n  // const match = matchPath();\r\n  //////////\r\n  const { isLoading, error, requestFn: getQuotes } = useHttp();\r\n  const [allQuots, setAllQuots] = useState([]);\r\n  useEffect(() => {\r\n    const transformData = (data) => {\r\n      const loadedArray = [];\r\n      Object.entries(data).map(([key, value]) => {\r\n        return loadedArray.push({\r\n          id: key,\r\n          text: value.text,\r\n          author: value.author,\r\n        });\r\n      });\r\n      setAllQuots(loadedArray);\r\n    };\r\n    getQuotes(\r\n      {\r\n        url: \"https://react-router-fcb08-default-rtdb.firebaseio.com/quotes.json\",\r\n      },\r\n      transformData\r\n    );\r\n  }, [getQuotes]);\r\n  /////////\r\n  // const quote = allQuots.find((quote) => quote.id === params.quoteId);\r\n  const [quote] = allQuots.filter((quote) => quote.id === params.quoteId);\r\n  const targetQuote = { ...quote };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n  if (error) {\r\n    return <p className=\"centered focused\">{error}</p>;\r\n  }\r\n  if (!error && !isLoading && targetQuote.text === \"\") {\r\n    return <p>No Quote Found</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <HighlightedQuote text={targetQuote.text} author={targetQuote.author} />\r\n      {/* <Routes>\r\n        <Route\r\n          path=\"\"\r\n          element={\r\n            <div className=\"centered\">\r\n              <Link className=\"btn--flat\" to=\"comments\">\r\n                Load Comments\r\n              </Link>\r\n            </div>\r\n          }\r\n        />\r\n      </Routes> */}\r\n      {location.pathname === `/all-quotes/${params.quoteId}` && (\r\n        <div className=\"centered\">\r\n          <Link\r\n            className=\"btn--flat\"\r\n            to={`/all-quotes/${params.quoteId}/comments`}\r\n          >\r\n            Load Comments\r\n          </Link>\r\n        </div>\r\n      )}\r\n      {/* <Routes>\r\n        <Route path=\"comments\" element={<Comments></Comments>} />\r\n      </Routes> */}\r\n      <Outlet />\r\n    </div>\r\n  );\r\n};\r\nexport default QuoteDetails;\r\n","D:\\React2\\React Router\\Practice v6\\src\\pages\\AllQuotes.js",["195"],"D:\\React2\\React Router\\Practice v6\\src\\components\\layout\\MainNav.js",[],"D:\\React2\\React Router\\Practice v6\\src\\components\\quotes\\QuoteForm.js",["196"],"import { Fragment, useRef, useState } from \"react\";\n\nimport Card from \"../ui/Card\";\nimport LoadingSpinner from \"../ui/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\n// import { Prompt } from \"react-router-dom\";\nconst QuoteForm = (props) => {\n  const [isEntered, setIsEntered] = useState(false);\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const formFocusHandler = () => {\n    setIsEntered(true);\n  };\n  const finichEnteredHandler = () => {\n    setIsEntered(false);\n  };\n  return (\n    <Fragment>\n      {/* <Prompt\n        when={isEntered}\n        message={(location) => {\n          return \"Are You Sure\";\n        }}\n      /> */}\n      <Card>\n        <form\n          onFocus={formFocusHandler}\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input type=\"text\" id=\"author\" ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={finichEnteredHandler} className=\"btn\">\n              Add Quote\n            </button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","D:\\React2\\React Router\\Practice v6\\src\\components\\quotes\\HighlightedQuote.js",[],"D:\\React2\\React Router\\Practice v6\\src\\components\\quotes\\NoQuotesFound.js",[],"D:\\React2\\React Router\\Practice v6\\src\\hooks\\use-http.js",["197","198"],"D:\\React2\\React Router\\Practice v6\\src\\components\\quotes\\QuoteList.js",[],"D:\\React2\\React Router\\Practice v6\\src\\components\\ui\\LoadingSpinner.js",[],"D:\\React2\\React Router\\Practice v6\\src\\components\\comments\\Comments.js",["199","200"],"import { useCallback, useEffect, useState } from \"react\";\n\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport CommentsList from \"./CommentsList\";\nimport useHttp from \"../../hooks/use-http\";\nimport { useNavigate, useLocation, useParams } from \"react-router-dom\";\nimport LoadingSpinner from \"../ui/LoadingSpinner\";\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  //////////\n  const params = useParams();\n  const navigate = useNavigate();\n  // const match = useMatch();\n  const location = useLocation();\n  const { isLoading, error, requestFn: sendComment } = useHttp();\n  ////////////\n  const [supmitComment, setSubmitComment] = useState(false);\n  const addCommentHandler = (commentText) => {\n    const transformData = (data) => {\n      setSubmitComment(true);\n    };\n    sendComment(\n      {\n        url: \"https://react-router-fcb08-default-rtdb.firebaseio.com/comments.json\",\n        method: \"POST\",\n        body: { quote: params.quoteId, text: commentText },\n      },\n      transformData\n    );\n  };\n\n  useEffect(() => {\n    if (!isLoading && !error && supmitComment) {\n      navigate(-1);\n    }\n  }, [error, isLoading, supmitComment, navigate]);\n\n  ///////////////\n  /////////\n  const { isLoading: isload, error: err, requestFn: getComments } = useHttp();\n  const [allComments, setAllComments] = useState([]);\n  useEffect(() => {\n    const transformData = (data) => {\n      const loadedArray = [];\n      Object.entries(data).map(([key, value]) => {\n        return loadedArray.push({\n          id: key,\n          text: value.text,\n          quote: value.quote,\n        });\n      });\n      setAllComments(loadedArray);\n    };\n    getComments(\n      {\n        url: \"https://react-router-fcb08-default-rtdb.firebaseio.com/comments.json\",\n      },\n      transformData\n    );\n  }, [getComments]);\n\n  let comments;\n  if (isload) {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />{\" \"}\n      </div>\n    );\n  }\n  if (!isload && !err && allComments.length > 0) {\n    comments = <CommentsList comments={allComments} />;\n  }\n  if (!isload && !err && allComments.length === 0) {\n    comments = <p className=\"centered\">no comments were added yet</p>;\n  }\n  //////////\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          isLoading={isLoading}\n          onAddComment={addCommentHandler}\n          error={error}\n        />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","D:\\React2\\React Router\\Practice v6\\src\\components\\quotes\\QuoteItem.js",[],"D:\\React2\\React Router\\Practice v6\\src\\components\\ui\\Card.js",[],"D:\\React2\\React Router\\Practice v6\\src\\components\\comments\\CommentsList.js",[],"D:\\React2\\React Router\\Practice v6\\src\\components\\comments\\NewCommentForm.js",["201"],"D:\\React2\\React Router\\Practice v6\\src\\components\\comments\\CommentItem.js",[],{"ruleId":"202","severity":1,"message":"203","line":1,"column":17,"nodeType":"204","messageId":"205","endLine":1,"endColumn":26},{"ruleId":"202","severity":1,"message":"206","line":1,"column":28,"nodeType":"204","messageId":"205","endLine":1,"endColumn":36},{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","replacedBy":"210"},{"ruleId":"202","severity":1,"message":"203","line":1,"column":17,"nodeType":"204","messageId":"205","endLine":1,"endColumn":26},{"ruleId":"202","severity":1,"message":"211","line":1,"column":10,"nodeType":"204","messageId":"205","endLine":1,"endColumn":19},{"ruleId":"202","severity":1,"message":"212","line":17,"column":9,"nodeType":"204","messageId":"205","endLine":17,"endColumn":16},{"ruleId":"202","severity":1,"message":"213","line":18,"column":9,"nodeType":"204","messageId":"205","endLine":18,"endColumn":17},{"ruleId":"202","severity":1,"message":"214","line":1,"column":10,"nodeType":"204","messageId":"205","endLine":1,"endColumn":21},{"ruleId":"202","severity":1,"message":"213","line":25,"column":9,"nodeType":"204","messageId":"205","endLine":25,"endColumn":17},{"ruleId":"202","severity":1,"message":"211","line":1,"column":10,"nodeType":"204","messageId":"205","endLine":1,"endColumn":19},{"ruleId":"202","severity":1,"message":"215","line":1,"column":8,"nodeType":"204","messageId":"205","endLine":1,"endColumn":13},{"ruleId":"202","severity":1,"message":"203","line":1,"column":17,"nodeType":"204","messageId":"205","endLine":1,"endColumn":26},{"ruleId":"202","severity":1,"message":"203","line":1,"column":17,"nodeType":"204","messageId":"205","endLine":1,"endColumn":26},{"ruleId":"202","severity":1,"message":"206","line":1,"column":28,"nodeType":"204","messageId":"205","endLine":1,"endColumn":36},{"ruleId":"207","replacedBy":"216"},{"ruleId":"209","replacedBy":"217"},{"ruleId":"202","severity":1,"message":"211","line":1,"column":10,"nodeType":"204","messageId":"205","endLine":1,"endColumn":19},{"ruleId":"202","severity":1,"message":"218","line":3,"column":3,"nodeType":"204","messageId":"205","endLine":3,"endColumn":8},{"ruleId":"202","severity":1,"message":"219","line":8,"column":3,"nodeType":"204","messageId":"205","endLine":8,"endColumn":9},{"ruleId":"202","severity":1,"message":"220","line":11,"column":8,"nodeType":"204","messageId":"205","endLine":11,"endColumn":16},{"ruleId":"202","severity":1,"message":"221","line":18,"column":9,"nodeType":"204","messageId":"205","endLine":18,"endColumn":17},{"ruleId":"202","severity":1,"message":"203","line":1,"column":17,"nodeType":"204","messageId":"205","endLine":1,"endColumn":26},{"ruleId":"202","severity":1,"message":"222","line":8,"column":10,"nodeType":"204","messageId":"205","endLine":8,"endColumn":19},{"ruleId":"202","severity":1,"message":"215","line":1,"column":8,"nodeType":"204","messageId":"205","endLine":1,"endColumn":13},{"ruleId":"202","severity":1,"message":"203","line":1,"column":17,"nodeType":"204","messageId":"205","endLine":1,"endColumn":26},{"ruleId":"202","severity":1,"message":"214","line":1,"column":10,"nodeType":"204","messageId":"205","endLine":1,"endColumn":21},{"ruleId":"202","severity":1,"message":"213","line":20,"column":9,"nodeType":"204","messageId":"205","endLine":20,"endColumn":17},{"ruleId":"202","severity":1,"message":"211","line":1,"column":10,"nodeType":"204","messageId":"205","endLine":1,"endColumn":19},"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","no-native-reassign",["223"],"no-negated-in-lhs",["224"],"'useEffect' is defined but never used.","'history' is assigned a value but never used.","'location' is assigned a value but never used.","'useCallback' is defined but never used.","'React' is defined but never used.",["223"],["224"],"'Route' is defined but never used.","'Routes' is defined but never used.","'Comments' is defined but never used.","'navigate' is assigned a value but never used.","'isEntered' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]